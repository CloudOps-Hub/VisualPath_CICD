name: Salesforce PR Validation

on:
  pull_request:
    branches:
      - main
    paths:
      - 'force-app/**'

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git history and sfdx-git-delta

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli

      - name: Install sfdx-git-delta Plugin
        run: echo "y" | sf plugins install sfdx-git-delta

      - name: Create server.key from secret
        run: |
          mkdir -p assets
          echo "${{ secrets.JWT_KEY }}" | base64 --decode > assets/server.key

      - name: Authenticate Salesforce Org
        run: |
          sf org login jwt \
            --client-id ${{ secrets.CLIENT_ID }} \
            --jwt-key-file assets/server.key \
            --username ${{ secrets.SF_USERNAME_UAT }} \
            --instance-url https://login.salesforce.com \
            --alias HUH

      - name: Determine Base and Head Commits
        id: commits
        run: |
          BASE_COMMIT=$(git merge-base origin/main HEAD)
          HEAD_COMMIT=HEAD
          echo "Base commit: $BASE_COMMIT"
          echo "Head commit: $HEAD_COMMIT"
          echo "base_commit=$BASE_COMMIT" >> $GITHUB_OUTPUT
          echo "head_commit=$HEAD_COMMIT" >> $GITHUB_OUTPUT

      - name: Show Changed Files
        run: |
          echo "Files changed between ${{ steps.commits.outputs.base_commit }} and ${{ steps.commits.outputs.head_commit }}:"
          git diff --name-status ${{ steps.commits.outputs.base_commit }} ${{ steps.commits.outputs.head_commit }}

      - name: Generate Delta Package
        id: delta
        run: |
          mkdir -p deploy_package
          echo "Running sfdx-git-delta..."
          sf sgd source delta \
            --from ${{ steps.commits.outputs.base_commit }} \
            --to ${{ steps.commits.outputs.head_commit }} \
            --output-dir deploy_package \
            --generate-delta || true
          # Check if delta is empty
          if [ ! -s deploy_package/package.xml ]; then
            echo "No changes detected with merge-base. Trying origin/main..."
            sf sgd source delta \
              --from origin/main \
              --to HEAD \
              --output-dir deploy_package \
              --generate-delta || true
          fi

          if [ ! -s deploy_package/package.xml ]; then
            echo "No metadata changes found. Skipping deployment."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Metadata changes found."
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Deploy Delta Components
        if: steps.delta.outputs.has_changes == 'true'
        run: |
          sf project deploy start \
            --metadata-dir deploy_package \
            --post-destructive-changes deploy_package/destructiveChanges.xml \
            --test-level RunLocalTests \
            --target-org HUH \
            --wait 120 \
            --verbose
